###############################################################################
# Copyright 2016, 2020 elasql.org contributors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###############################################################################

#
# Basic Parameters
#

# The running time for warming up before benchmarking
org.elasql.bench.ElasqlBenchParameters.WARM_UP_INTERVAL=60000
# The running time for benchmarking
org.elasql.bench.ElasqlBenchParameters.BENCHMARK_INTERVAL=60000
# The number of remote terminal executors for benchmarking
org.elasql.bench.ElasqlBenchParameters.NUM_RTES=2
# The sleeping time (in milliseconds) between transactions for each RTE
# 0 = no sleeping, 100 is a generally good number for under-loaded workloads
org.elasql.bench.ElasqlBenchParameters.RTE_SLEEP_TIME=0
# 1 = Micro, 2 = TPC-C, 3 = TPC-E, 4 = YCSB
# TPC-E dose not work for now
org.elasql.bench.ElasqlBenchParameters.BENCH_TYPE=2
# Whether it enables the built-in profiler on the server
org.elasql.bench.ElasqlBenchParameters.PROFILING_ON_SERVER=false
# The path to the generated reports
org.elasql.bench.ElasqlBenchParameters.REPORT_OUTPUT_DIRECTORY=
# The granularity for summarizing the performance of benchmarking 
org.elasql.bench.ElasqlBenchParameters.REPORT_TIMELINE_GRANULARITY=1000
# Whether the RTEs display the results of each transaction
org.elasql.bench.ElasqlBenchParameters.SHOW_TXN_RESPONSE_ON_CONSOLE=false


#
# Micro-benchmarks Parameters
#
org.elasql.bench.benchmarks.micro.ElasqlMicrobenchConstants.NUM_ITEMS_PER_NODE=100000
org.elasql.bench.benchmarks.micro.rte.ElasqlMicrobenchParamGen.DIST_TX_RATE=0.2
org.elasql.bench.benchmarks.micro.rte.ElasqlMicrobenchParamGen.RW_TX_RATE=0.2
org.elasql.bench.benchmarks.micro.rte.ElasqlMicrobenchParamGen.SKEW_TX_RATE=0.0
org.elasql.bench.benchmarks.micro.rte.ElasqlMicrobenchParamGen.LONG_READ_TX_RATE=0.0
org.elasql.bench.benchmarks.micro.rte.ElasqlMicrobenchParamGen.TOTAL_READ_COUNT=10
org.elasql.bench.benchmarks.micro.rte.ElasqlMicrobenchParamGen.LOCAL_HOT_COUNT=1
org.elasql.bench.benchmarks.micro.rte.ElasqlMicrobenchParamGen.REMOTE_HOT_COUNT=0
org.elasql.bench.benchmarks.micro.rte.ElasqlMicrobenchParamGen.REMOTE_COLD_COUNT=1
org.elasql.bench.benchmarks.micro.rte.ElasqlMicrobenchParamGen.WRITE_RATIO_IN_RW_TX=0.5
org.elasql.bench.benchmarks.micro.rte.ElasqlMicrobenchParamGen.HOT_CONFLICT_RATE=0.001
org.elasql.bench.benchmarks.micro.rte.ElasqlMicrobenchParamGen.SKEW_PERCENTAGE=0.2

#
# TPC-C Parameters
#

# The total number of frequency
org.elasql.bench.benchmarks.tpcc.ElasqlTpccParameters.FREQUENCY_TOTAL=100
# The frequency of new-order transactions
org.elasql.bench.benchmarks.tpcc.ElasqlTpccParameters.FREQUENCY_NEW_ORDER=50
# The frequency of payment transactions
org.elasql.bench.benchmarks.tpcc.ElasqlTpccParameters.FREQUENCY_PAYMENT=50
# The frequency of order-status transactions
# XXX: Not implemented
org.elasql.bench.benchmarks.tpcc.ElasqlTpccParameters.FREQUENCY_ORDER_STATUS=0
# The frequency of delivery transactions
# XXX: Not implemented
org.elasql.bench.benchmarks.tpcc.ElasqlTpccParameters.FREQUENCY_DELIVERY=0
# The frequency of stock-level transactions
# XXX: Not implemented
org.elasql.bench.benchmarks.tpcc.ElasqlTpccParameters.FREQUENCY_STOCK_LEVEL=0
# Whether it enables the thinking and keying time defined in TPC-C specification
org.elasql.bench.benchmarks.tpcc.ElasqlTpccParameters.ENABLE_THINK_AND_KEYING_TIME=false
# Partition strategies
# 1: Normal, 2: MgCrab scaling-out, 3: MgCrab consolidation
org.elasql.bench.benchmarks.tpcc.ElasqlTpccParameters.PARTITION_STRATEGY=1
# These parameters only work with the normal partitioning strategy
# Controls the skewness (hotness) of a partition
org.elasql.bench.benchmarks.tpcc.ElasqlTpccParameters.WAREHOUSE_PER_PART=1
org.elasql.bench.benchmarks.tpcc.TpccStandardRteGenerator.SKEW_RATIO=0.0
# Parameters for MgCrab scale-out experiments
# Note that when NUM_HOT_PARTS = 2 and HOT_WAREHOUSE_PER_HOT_PART = 2,
# it will create 2 source partitions and 4 destination partitions,
# because each hot partition must migrate a hot warehouse to a destination partition.
# How many partitions are hot
org.elasql.bench.server.metadata.migration.scaleout.TpccScaleoutBeforePartPlan.NUM_HOT_PARTS=1
# How many warehouses each hot partition has
org.elasql.bench.server.metadata.migration.scaleout.TpccScaleoutBeforePartPlan.HOT_WAREHOUSE_PER_HOT_PART=1



#
# YCSB Parameters
#
# Database mode
# 1: Single Table, 2: Multi-Table (works better for multi-tenant settings)
org.elasql.bench.benchmarks.ycsb.ElasqlYcsbConstants.DATABASE_MODE=1
# Workload type
# 1: Normal, 2: Google, 3: Multi-tenant, 4: Hot Counter
org.elasql.bench.benchmarks.ycsb.ElasqlYcsbConstants.WORKLOAD_TYPE=1
# 0: Normal, 100 is enough for underloaded
org.elasql.bench.benchmarks.ycsb.ElasqlYcsbConstants.SENDING_DELAY=0
org.elasql.bench.benchmarks.ycsb.ElasqlYcsbConstants.INIT_RECORD_PER_PART=1000000
# TENANTS_PER_PART only works in multi-tenant databases.
org.elasql.bench.benchmarks.ycsb.ElasqlYcsbConstants.TENANTS_PER_PART=4
org.elasql.bench.benchmarks.ycsb.ElasqlYcsbConstants.RW_TX_RATE=0.5
org.elasql.bench.benchmarks.ycsb.ElasqlYcsbConstants.DIST_TX_RATE=0.5
org.elasql.bench.benchmarks.ycsb.ElasqlYcsbConstants.REMOTE_RECORD_RATIO=0.5
# Controls how many additional insertions for each transaction.
# ADD_INSERT_IN_WRITE_TX only works in multi-tenant databases.
org.elasql.bench.benchmarks.ycsb.ElasqlYcsbConstants.ADD_INSERT_IN_WRITE_TX=0
# Controls if a RTE always generates a fixed number of record keys for each transaction
org.elasql.bench.benchmarks.ycsb.ElasqlYcsbConstants.USE_DYNAMIC_RECORD_COUNT=false
# Controls hotspot workloads
org.elasql.bench.benchmarks.ycsb.ElasqlYcsbConstants.ENABLE_HOTSPOT=false
org.elasql.bench.benchmarks.ycsb.ElasqlYcsbConstants.HOTSPOT_HOTNESS=0.9
org.elasql.bench.benchmarks.ycsb.ElasqlYcsbConstants.HOTSPOT_CHANGE_PERIOD=90
# Controls how many records a transaction performs read-modify-write on
# This only works when USE_DYNAMIC_RECORD_COUNT=false
org.elasql.bench.benchmarks.ycsb.ElasqlYcsbConstants.TX_RECORD_COUNT=2
# Controls the mean and the standard deviation when generating the number of records
# RECORD_COUNT_MEAN and RECORD_COUNT_STD only work when USE_DYNAMIC_RECORD_COUNT=true and WorkloadType != Normal
org.elasql.bench.benchmarks.ycsb.ElasqlYcsbConstants.RECORD_COUNT_MEAN=2
org.elasql.bench.benchmarks.ycsb.ElasqlYcsbConstants.RECORD_COUNT_STD=2
# Controls the parameter used by a Zipfian distribution
org.elasql.bench.benchmarks.ycsb.ElasqlYcsbConstants.ZIPFIAN_PARAMETER=0.99
# Google Workloads
org.elasql.bench.benchmarks.ycsb.ElasqlYcsbConstants.GOOGLE_TRACE_FILE=
org.elasql.bench.benchmarks.ycsb.ElasqlYcsbConstants.GOOGLE_TRACE_LENGTH=0
# Hot Counter Workloads
org.elasql.bench.benchmarks.ycsb.ElasqlYcsbConstants.HOT_COUNT_PER_PART=1
org.elasql.bench.benchmarks.ycsb.ElasqlYcsbConstants.HOT_UPDATE_RATE_IN_RW_TX=0.1
# For dynamic record count in YCSB "Normal"
org.elasql.bench.benchmarks.ycsb.ElasqlYcsbConstants.DYNAMIC_RECORD_COUNT_RANGE=5

#
# Recon-benchmarks Parameters
#
org.elasql.bench.benchmarks.recon.ElasqlReconbenchConstants.NUM_ITEMS_PER_NODE=100000
org.elasql.bench.benchmarks.recon.rte.ElasqlReconbenchParamGen.DIST_TX_RATE=0.2
org.elasql.bench.benchmarks.recon.rte.ElasqlReconbenchParamGen.RW_TX_RATE=0.2
org.elasql.bench.benchmarks.recon.rte.ElasqlReconbenchParamGen.SKEW_TX_RATE=0.0
org.elasql.bench.benchmarks.recon.rte.ElasqlReconbenchParamGen.LONG_READ_TX_RATE=0.0
org.elasql.bench.benchmarks.recon.rte.ElasqlReconbenchParamGen.TOTAL_READ_COUNT=10
org.elasql.bench.benchmarks.recon.rte.ElasqlReconbenchParamGen.LOCAL_HOT_COUNT=1
org.elasql.bench.benchmarks.recon.rte.ElasqlReconbenchParamGen.REMOTE_HOT_COUNT=0
org.elasql.bench.benchmarks.recon.rte.ElasqlReconbenchParamGen.REMOTE_COLD_COUNT=1
org.elasql.bench.benchmarks.recon.rte.ElasqlReconbenchParamGen.WRITE_RATIO_IN_RW_TX=0.5
org.elasql.bench.benchmarks.recon.rte.ElasqlReconbenchParamGen.HOT_CONFLICT_RATE=0.001
org.elasql.bench.benchmarks.recon.rte.ElasqlReconbenchParamGen.SKEW_PERCENTAGE=0.2
# For index update rate
org.elasql.bench.benchmarks.recon.rte.ElasqlReconbenchParamGen.INDEX_UPDATE_COUNT=2
org.elasql.bench.benchmarks.recon.rte.ElasqlReconbenchRte.UPDATE_TIME_PER_SECOND=1
